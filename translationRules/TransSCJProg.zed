\begin{zsection}
  \SECTION TransSCJProg \parents scj\_prelude, SCJBNFEncoding, CircusBNFEncoding, \\
  \t1 BuildPhase, GeneratePhase, Framework
\end{zsection}

\begin{axdef}
ProcessID : N \pfun ID
\end{axdef}

\begin{axdef}
	TransClasses : SCJProgram \pfun CircusProgram
\end{axdef}

\begin{axdef}
FWName : N \\
AppName : N \\
MCBName : N \\
LockName : N \\
ProgName : Identifier \pfun N 
\end{axdef}

\begin{axdef}
appComms : CSExpression \\
mcbComms : CSExpression \\
lockComms: CSExpression 
\end{axdef}

\begin{axdef}
TransSCJProg : Identifier \cross SCJProgram \pfun CircusProgram
\where
\forall name : Identifier; scjProg : SCJProgram \\
\t1 | (name, scjProg) \in dom~TransSCJProg @\\
\t1 \exists app : CircusProgram ; program : CircusProgram ; \\
\t2 \t2 fwProcs : \seq Process ; appProc : Process ; lockModel : \seq CircusParagraph; \\
\t2 mcbModel : \seq CircusParagraph ;  fwEnv : FWEnv ;\\
\t2 appEnv : AppProcEnv ; mcbEnv : MCBEnv ; lockEnv : LockingEnv | \\
\t3 fwEnv = BuildFWEnv(scjProg) \\
\t3 appEnv = BuildAppProcEnv(scjProg) \\
\t3 mcbEnv = BuildMCBEnv(scjProg) \\
\t3 lockEnv = BuildLockEnv(scjProg) \\
\t3 app = TransClasses(scjProg) \\
\t3 \land fwProcs = GenerateFWProcs(fwEnv)  \\
\t3 \land appProc = GenerateAppProc(appEnv)  \\
\t3 \land mcbEnv.BinderMethods \neq \langle \rangle \implies mcbModel = GenerateMCBModel(mcbEnv) \\
\t3 \land mcbEnv.BinderMethods = \langle \rangle \implies mcbModel = \langle \rangle \\
\t3 \land lockEnv.Empty = \false \implies lockModel = GenerateLockModel(lockEnv)\\
\t3 \land lockEnv.Empty = \true \implies lockModel = \langle \rangle\\
\t3  \land program =  \langle procDef(pd(ProgName(name), \\
\t3 procHide( procPar( \\
\t4 procHide( \\
\t5 procPar(\\
\t6procName(FWName), \\
\t6 appComms, \\
\t6 procHide( \\
\t7 procPar(procName(AppName),\\
\t7 mcbComms,\\
\t7 procName(MCBName)) ,\\
\t6 mcbComms)), \\
\t5 appComms), \\
\t4 lockComms, \\
\t4 procName(LockName)), \\
\t3 lockComms) )) \rangle  @ \\
%\t3 fwEnv = \langle \rangle \lor appEnv = \langle \rangle \implies TransSCJProg(name, scjProg) = \langle \rangle
\t3 TransSCJProg(name, scjProg) = \\
\t4 framework \cat \langle procDef(pd(FWName,head~fwProcs)) \rangle \cat \\
\t5 app \cat \langle procDef(pd(AppName,appProc))\rangle \cat\\
\t5 mcbModel \cat\\
\t5 lockModel \cat\\
\t5 program
\end{axdef}
