\begin{zsection}
  \SECTION SCJBNFEncoding \parents  standard\_toolkit
\end{zsection}


\begin{zed}
[MethodBody, ClassBodyDeclaration, Identifier, MethodDeclaration, Long, ClassDeclaration] \\
\end{zed}


\begin{zed}
Run == MethodBody \\
ManagedThreadClassBody == Run \cross \seq ClassBodyDeclaration \\
ManagedThread == Identifier \cross ManagedThreadClassBody \\
\end{zed}

\begin{zed}
HandleAsyncEvent ==  MethodBody \\
HandleAsyncLongEvent ==  Long \cross MethodBody \\
EventHandlerClassBody == HandleAsyncEvent \cross \seq ClassBodyDeclaration \\
OneShotEventHandler == Identifier \cross EventHandlerClassBody \\
LongEventHandlerClassBody == HandleAsyncLongEvent \cross \seq ClassBodyDeclaration \\
AperiodicEventHandler ::= apehType \ldata Identifier \cross EventHandlerClassBody \rdata  |\\
\t1  aplehType \ldata Identifier \cross LongEventHandlerClassBody \rdata \\
PeriodicEventHandler == Identifier \cross EventHandlerClassBody \\
EventHandler ::= pehDecl \ldata PeriodicEventHandler \rdata |\\
\t1 apehDecl \ldata AperiodicEventHandler \rdata | \\
\t1 osehDecl \ldata OneShotEventHandler \rdata \\
\end{zed}

\begin{zed}
GetNextMission ==  MethodBody\\
MissionSequencerClassBody == GetNextMission \cross \seq ClassBodyDeclaration \\
MissionSequencer == Identifier \cross MissionSequencerClassBody \\
\end{zed}

\begin{zed}
NestedMissionSequencer == MissionSequencer
\end{zed}

\begin{zed}
SchedulableObject ::= handler \ldata EventHandler \rdata | \\
\t1 mt \ldata ManagedThread \rdata | \\
\t1 nms \ldata NestedMissionSequencer \rdata \\
\end{zed}

\begin{zed}
Cleanup == MethodBody \\
Initialize == MethodBody \\
MissionClassBody == Initialize \cross Cleanup \cross \seq ClassBodyDeclaration \\
Mission == Identifier \cross MissionClassBody\\
\end{zed}

\begin{zed}
Cluster == Mission \cross \seq SchedulableObject \\
Tier == \seq Cluster \\
\end{zed}

\begin{zed}
TopLevelMissionSequencer ::= NoSequencer | tlms \ldata MissionSequencer \rdata\\
\end{zed}

\begin{zed}
ImmortalMemorySize == MethodDeclaration \\
InitializeApplication == MethodBody \\
GetSequencer == MethodBody \\
SafeletClassBody == \\
\t1 InitializeApplication \cross GetSequencer \cross ImmortalMemorySize \cross \seq ClassBodyDeclaration \\
Safelet == Identifier \cross SafeletClassBody \\
\end{zed} 

\begin{zed}
SCJProgram == Safelet \cross TopLevelMissionSequencer \cross \seq Tier \\
\end{zed}
