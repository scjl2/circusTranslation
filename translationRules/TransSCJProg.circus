\begin{zsection}
  \SECTION TransSCJProg \parents scj\_prelude, SCJBNFEncoding, CircusBNFEncoding 
\end{zsection}

\begin{axdef}

controlTierSync : CSExpression \\
Tier0 : N \\
MissionIds : \seq CircusParagraph \\ 
SchedulableIds : \seq CircusParagraph \\ 
\end{axdef} 

\begin{axdef}
ServicesChan : \seq CircusParagraph \\ 
 GlobalTypes : \seq CircusParagraph \\ 
  JTime : \seq CircusParagraph \\ 
   PrimitiveTypes : \seq CircusParagraph \\   
 Priority : \seq CircusParagraph \\ 
 PriorityQueue : \seq CircusParagraph \\ 
  FrameworkChan:\seq CircusParagraph \\ 
   MissionId : \seq CircusParagraph \\ 
   SchedulableId : \seq CircusParagraph \\ 
   \end{axdef} 
   
   \begin{axdef}
 ObjectFW : CircusParagraph \\
 ObjectChan : \seq CircusParagraph \\ 
 ObjectFWChan : \seq CircusParagraph \\ 
  ObjectMethChan : \seq CircusParagraph \\ 
 ThreadFW : CircusParagraph \\
 ThreadChan : \seq CircusParagraph \\ 
  ThreadFWChan :\seq CircusParagraph \\ 
   ThreadMethChan : \seq CircusParagraph \\ 
      \end{axdef} 
   
   \begin{axdef}
 SafeletFW : CircusParagraph \\
 SafeletFWChan : \seq CircusParagraph \\ 
  SafeletChan : \seq CircusParagraph \\ 
  SafeletMethChan :  \seq CircusParagraph \\ 
     \end{axdef} 
   
   \begin{axdef}
TopLevelMissionSequencerFW : CircusParagraph \\
 TopLevelMissionSequencerChan : \seq CircusParagraph \\ 
  TopLevelMissionSequencerFWChan : \seq CircusParagraph \\
     \end{axdef} 
   
   \begin{axdef} 
 MissionSequencerChan : \seq CircusParagraph \\ 
 MissionSequencerFWChan : \seq CircusParagraph \\ 
 MissionSequencerMethChan : \seq CircusParagraph \\ 
    \end{axdef} 
   
   \begin{axdef}
 MissionFW : CircusParagraph \\
 MissionChan : \seq CircusParagraph \\ 
  MissionFWChan : \seq CircusParagraph \\ 
   MissionMethChan : \seq CircusParagraph \\ 
      \end{axdef} 
   
   \begin{axdef}
SchedulableChan : \seq CircusParagraph \\ 
 SchedulableMethChan  : \seq CircusParagraph \\ 
  SchedulableFWChan : \seq CircusParagraph \\ 
 HandlerChan : \seq CircusParagraph \\ 
 HandlerFWChan : \seq CircusParagraph \\ 
  HandlerMethChan : \seq CircusParagraph \\ 
     \end{axdef} 
   
   \begin{axdef}
 PeriodicEventHandlerChan : \seq CircusParagraph \\ 
 PeriodicEventHandlerFW : CircusParagraph \\
  PeriodicEventHandlerFWChan : \seq CircusParagraph \\ 
   PeriodicParameters : \seq CircusParagraph \\ 
      \end{axdef} 
   
   \begin{axdef}
 AperiodicEventHandlerChan : \seq CircusParagraph \\ 
 AperiodicEventHandlerFW : CircusParagraph \\
  AperiodicLongEventHandlerMethChan : \seq CircusParagraph \\ 
   AperiodicParameters : \seq CircusParagraph \\ 
      \end{axdef} 
   
   \begin{axdef}
 OneShotEventHandlerChan : \seq CircusParagraph \\ 
 OneShotEventHandlerFW : CircusParagraph \\
  OneShotEventHandlerFWChan : \seq CircusParagraph \\ 
   OneShotEventHandlerMethChan : \seq CircusParagraph \\ 
      \end{axdef} 
   
   \begin{axdef}
SchedulableMissionSequencerFW : CircusParagraph \\
 SchedulableMissionSequencerChan : \seq CircusParagraph \\ 
  SchedulableMissionSequencerFWChan :  \seq CircusParagraph \\ 
     \end{axdef} 
   
   \begin{axdef}
 ManagedThreadFW : CircusParagraph \\
 ManagedThreadChan : \seq CircusParagraph \\ 
  ManagedThreadFWChan :\seq CircusParagraph \\ 
   ManagedThreadMethChan : \seq CircusParagraph \\ 
\end{axdef}


\begin{axdef}
framework : CircusProgram \\
\where
framework = ServicesChan \cat GlobalTypes \cat JTime \cat PrimitiveTypes \cat Priority \cat \\
\t1 PriorityQueue \cat FrameworkChan \cat MissionId \cat SchedulableId \cat \langle ObjectFW \rangle \cat \\
\t1 ObjectChan \cat ObjectFWChan \cat ObjectMethChan \cat \langle ThreadFW \rangle \cat ThreadChan \cat \\
\t1 ThreadFWChan \cat ThreadMethChan \cat \langle SafeletFW \rangle \cat SafeletFWChan \cat \\
\t1 SafeletChan \cat SafeletMethChan \cat \langle TopLevelMissionSequencerFW \rangle \cat \\ 
\t1 TopLevelMissionSequencerChan \cat TopLevelMissionSequencerFWChan \cat \\
\t1 MissionSequencerChan \cat MissionSequencerFWChan \cat MissionSequencerMethChan \cat \\
\t1 \langle MissionFW \rangle \cat MissionChan \cat MissionFWChan \cat MissionMethChan \cat \\
\t1 SchedulableChan \cat SchedulableMethChan  \cat SchedulableFWChan \cat \\
\t1 HandlerChan \cat HandlerFWChan \cat HandlerMethChan \cat PeriodicEventHandlerChan \cat \\
\t1 \langle PeriodicEventHandlerFW \rangle \cat PeriodicEventHandlerFWChan  \cat PeriodicParameters \cat\\
\t1 AperiodicEventHandlerChan \cat \langle AperiodicEventHandlerFW \rangle \cat \\
\t1 AperiodicLongEventHandlerMethChan \cat AperiodicParameters \cat \\
\t1 OneShotEventHandlerChan \cat \langle OneShotEventHandlerFW \rangle \cat \\
\t1 OneShotEventHandlerFWChan \cat OneShotEventHandlerMethChan \cat \\
\t1 \langle SchedulableMissionSequencerFW \rangle \cat SchedulableMissionSequencerChan \cat \\
\t1 SchedulableMissionSequencerFWChan \cat \langle ManagedThreadFW \rangle \cat ManagedThreadChan \cat\\
\t1 ManagedThreadFWChan \cat ManagedThreadMethChan
\end{axdef}

\begin{axdef}
fwProcName : N \pfun N \\
appProcName : N \pfun N \\
mcbProcName  : N \pfun N \\
lockProcName : N \pfun N \\
\where
distinct \langle ran~fwProcName, ran~appProcName, ran~mcbProcName, ran~lockProcName \rangle 
\end{axdef}
   

\begin{axdef}
GenerateTierProcs : \seq Tier \pfun Process 

\end{axdef}

\begin{axdef}
GenerateTiers : \seq Tier \pfun \seq Process 

\end{axdef}

\begin{axdef}
GetEnv : SCJProgram \pfun Safelet \cross TopLevelMissionSequencer \cross \seq Tier
\where
\forall scj : SCJProgram @ \\
\t1 \exists s : Safelet ; tlms : TopLevelMissionSequencer ; tiers : \seq Tier @ \\
\t1 GetEnv(scj) = (s,tlms,tiers)
\end{axdef}

\begin{axdef}
SafeletFWName : N \\
TopLevelMissionSequencerFWNMame : N
\end{axdef}

\begin{axdef}
GenerateFWProcs :  Safelet \cross TopLevelMissionSequencer \cross \seq Tier \pfun \seq Process
\where
\forall s : Safelet ; tlms : TopLevelMissionSequencer ; tiers : \seq Tier @ \\
\t1 \exists fwProc : Process ; controlTierProc: Process ;  tierProc : Process ; tierProcs : \seq Process | \\
\t2 fwProc = procPar(controlTierProc, controlTierSync, tierProc) \land \\
\t2 controlTierProc = \\
\t3 procPar(procName(SafeletFWName), controlTierSync, procName(TopLevelMissionSequencerFWNMame)) \land \\
\t2 tierProc = GenerateTierProcs(tiers) \\
\t2 tierProcs = GenerateTiers(tiers) @ \\
\t2 GenerateFWProcs(s, tlms, tiers) = \langle fwProc \rangle \cat tierProcs
\end{axdef}

\begin{axdef}
GenerateAppProc : Safelet \cross TopLevelMissionSequencer \cross \seq Tier \pfun Process
\end{axdef}

\begin{axdef}
GenerateMCBProc : Safelet \cross TopLevelMissionSequencer \cross \seq Tier \pfun Process
\end{axdef}

\begin{axdef}
GenerateLockProc : Safelet \cross TopLevelMissionSequencer \cross \seq Tier \pfun \seq Process
\end{axdef}

\begin{axdef}
	TransClasses : Safelet \cross TopLevelMissionSequencer \cross \seq Tier \pfun CircusProgram
\end{axdef}

\begin{axdef}
TransSCJProg : Identifier \cross SCJProgram \pfun CircusProgram
\where
\forall scjProg : SCJProgram; name : Identifier @\\
\t1 \exists app : CircusProgram ;  \\
\t2 program : CircusProgram ; n : N ; p : Process ;\\
\t2 appComms : CSExpression ; mcbComms : CSExpression ; lockComms: CSExpression \\
\t2 fwProcs : \seq Process ; appProc : Process ; lockProc : Process; mcbProc : Process | \\
\t1 app = TransClasses(GetEnv(scjProg)) \land \\
\t1 fwProcs = GenerateFWProcs(GetEnv(scjProg)) \land \\
\t1 appProc = GenerateAppProc(GetEnv(scjProg)) \land \\
\t1 mcbProc = GenerateMCBProc(GetEnv(scjProg)) \land \\
\t1 lockProc = GenerateLockProc(GetEnv(scjProg)) \land \\
\t1 program =  procDef(pd(name, \\
\t2 procHide(procPar( \\
\t3 procHide(procPar( \\
\t4 procHide(procPar(fwProcs, appComms, appProc), appComms) \\
\t3 , mcbComms, mcbProc), mcbComms), \\
\t2 lockComms, lockProc), lockComms)  ))  @ \\
\t1 TransSCJProg(name, scjProg) =\\
\t2 framework \cat \langle procDef(pd(fwProcName(n),fwProc)) \rangle \cat \\
\t3 app \cat \langle procDef(pd(appProcName(n),appProc))\rangle \cat\\
\t3 \langle procDef(pd(mcbProcName(n),mcbProc)) \rangle \cat\\
\t3 \langle procDef(pd(lockProcName(n),lockProc)) \rangle \cat \\
\t3 \langle program \rangle
\end{axdef}
