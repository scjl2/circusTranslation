\begin{zsection}
  \SECTION ~ NavigationMonitorApp ~ \parents ~ PeriodicEventHandlerChan, SchedulableId, SchedulableIds \\
 \t1  , \\
MainMissionMethChan



\end{zsection}

\begin{circus}
\circprocess NavigationMonitorApp \circdef \\ \qquad
  mainMission : MissionID
 
\circspot
  \circbegin
\end{circus}


\begin{circusaction}
handlerAsyncEvent \circdef \\
\circblockopen
	handleAsyncEventCall~.~NavigationMonitor \then \\
	
      \circblockopen

            binder\_getHeadingCall~.~mainMission~.~NavigationMonitor\then \ \ binder\_getHeadingRet~.~mainMission~.~NavigationMonitor~?~getHeading\then \ \\ \ \circvar heading : \mathbb{R} \circspot heading :=~getHeading\ \


            binder\_getAirSpeedCall~.~mainMission~.~NavigationMonitor\then \ \ binder\_getAirSpeedRet~.~mainMission~.~NavigationMonitor~?~getAirSpeed\then \ \\ \ \circvar airSpeed : \mathbb{R} \circspot airSpeed :=~getAirSpeed\ \


            binder\_getAltitudeCall~.~mainMission~.~NavigationMonitor\then \ \ binder\_getAltitudeRet~.~mainMission~.~NavigationMonitor~?~getAltitude\then \ \\ \ \circvar altitude : \mathbb{R} \circspot altitude :=~getAltitude\ \
\Skip
        \circblockclose

 \circseq \\
    handleAsyncEventRet~.~NavigationMonitor \then \\
    \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef \\
\circblockopen
	handlerAsyncEvent \\
%
%
%
\circblockclose
	 \circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( Methods) 
  \circinterrupt (end\_periodic\_app~.~NavigationMonitor \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
