\begin{zsection}
  \SECTION ~ WheelShaftApp ~ \parents ~ WheelShaftClass, WheelShaftMethChan, WheelShaftConst,\\
  \t1 HandlerIds, Events
\end{zsection}
\extracircusvspace
%
\begin{circus}
  \circprocess ~ WheelShaftApp ~ \circdef ~ \circbegin
\end{circus}
%
\begin{schema}{\circstateignore WheelShaftState}
  this : WheelShaftClass
\end{schema}
%
\begin{comment}
\begin{circusaction}
  \circstate ~ WheelShaftState
\end{circusaction}
\end{comment}
%
\begin{circusaction}
  Init ~ \circdef ~ WheelShaftInit~?~obj \then this \circrefassign obj
\end{circusaction}
%
\begin{circusaction*}
  handleAsyncLongEventMeth ~ \circdef\\
  \t1 \circval evt : EventId \circspot this.handleAsyncLongEvent(evt)
\end{circusaction*}
%
\begin{comment}
\begin{circusaction}
  handleAsyncLongEventMeth ~ \circdef\\
  \t1 \circval evt : EventId \circspot \Skip
\end{circusaction}
\end{comment}
%
\begin{circusaction}
  Execute ~ \circdef ~ enter\_dispatch \then Dispatch
\end{circusaction}
%
\begin{circusaction}
  Dispatch ~ \circdef ~ \circmu X \circspot  (leave\_dispatch \then \Skip) ~ ~ \extchoice\\
  \t1 (wheel\_shaft \then handleAsyncLongEventMeth(WheelShaftEvtId) \circseq\\
  \t2 \circwait 0..WheelShaftDeadline \circseq X)
\end{circusaction}
%
\begin{circusaction}
  Terminate ~ \circdef ~ done\_handler~.~WheelShaftId \then \Skip
\end{circusaction}
%
\begin{circusaction}
  \circspot (\circmu X \circspot Init \circseq Execute \circseq Terminate \circseq X) \circinterrupt ~ end\_mission\_fw \then \Skip
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
