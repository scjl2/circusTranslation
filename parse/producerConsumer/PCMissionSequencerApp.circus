\begin{zsection}
  \SECTION ~ PCMissionSequencerApp ~ \parents ~ TopLevelMissionSequencerChan,\\
  \t1 MissionId, MissionIds, SchedulableId, SchedulableIds  ,
  %PCMissionSequencerClass,
  MethodCallBindingChannels

  \t1

\end{zsection}


\begin{circus}
\circprocess PCMissionSequencerApp \circdef  \circbegin\\
\end{circus}

\begin{schema}{State}
  this : \num %\circreftype PCMissionSequencerClass\\
\end{schema}
%
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~' \\
\where
  this' = 0 %\circnew PCMissionSequencerClass()\\
\end{schema}

\begin{circusaction}
GetNextMission \circdef
\circvar ret : MissionID \circspot \\
\circblockopen
    getNextMissionCall~.~PCMissionSequencerSID \then \\
	   ret := nullMissionId \circseq % this~.~getNextMission() \circseq \\
    getNextMissionRet~.~PCMissionSequencerSID~!~ret  \then \\
\Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef  \\
\circblockopen
	GetNextMission \\
%
%
%
\circblockclose
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( \lschexpract Init \rschexpract \circseq Methods)
  %\circhide MissionSequencerAppStateSync
\circseq %\circinterrupt
(end\_sequencer\_app~.~PCMissionSequencerSID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
