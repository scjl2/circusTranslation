\begin{zsection}
  \SECTION ~ ProgramEnv ~ \parents ~ scj\_prelude, MissionId, SchedulableId
\end{zsection}
%
\begin{zed}
	[Name] \\
	[Method] \\
	[Type] \\
	MethodSet == \power Method 
\end{zed}
%
\begin{schema}{ObjectEnv}
name : Name \\
variables : \seq Name \\
methods : MethodSet \\
syncMethods : MethodSet \\
\end{schema}
%
\begin{schema}{addMethod}
\Delta ObjectEnv \\
m? : Method \\
\where
m \notin methods\\
methods' = methods \cup \{m?\} \\
name' = name \\
variables' = variables \\
syncMethods' = syncMethods
\end{schema}
%
\begin{schema}{setName}
\Delta ObjectEnv \\
n? : Name \\
\where
name' = n? \\
variables' = variables \\
methods' = methods \\
syncMethods' = syncMethods
\end{schema}
%
%\begin{schema}{SafeletEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{MissionEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{OneShotEventHandlerEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{PeriodicEventHandlerEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{AperiodicEventHandlerEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{ManagedThreadEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{MissionSequencerEnv}
%ObjectEnv
%\end{schema}
%
%\begin{schema}{TopLevelMissionSequencerEnv}
%MissionSequencerEnv
%\end{schema}
%
%\begin{schema}{SchedulableMissionSequencerEnv}
%MissionSequencerEnv
%\end{schema}
\begin{zed}
SafeletEnv == ObjectEnv \\
MissionEnv == ObjectEnv \\
MissionSequencerEnv == ObjectEnv \\
PeriodicEventHandlerEnv == ObjectEnv \\
AperiodicEventHandlerEnv == ObjectEnv \\
OneShotEventHandlerEnv == ObjectEnv \\
ManagedThreadEnv == ObjectEnv 
\end{zed}
%
\begin{axdef}
  nullSafeletEnv : SafeletEnv \\
  nullMissionEnv : MissionEnv \\
  nullMissionSequencerEnv : MissionSequencerEnv \\
  nullPeriodicEventHandlerEnv : PeriodicEventHandlerEnv \\
  nullAperiodicEventHandlerEnv : AperiodicEventHandlerEnv \\
  nullOneShotEventHandlerEnv : OneShotEventHandlerEnv \\
  nullManagedThreadEnv : ManagedThreadEnv 
\end{axdef}
%
\begin{zed}
TopLevelMissionSequencerEnv == MissionSequencerEnv \\
SchedulableMissionSequencerEnv == MissionSequencerEnv 
\end{zed}
%
\begin{schema}{SchedulablesEnv}
Periodics : \seq PeriodicEventHandlerEnv\\
Aperiodics : \seq AperiodicEventHandlerEnv\\
OneShots : \seq OneShotEventHandlerEnv\\
NestedSequencers : \seq SchedulableMissionSequencerEnv\\
ManagedThreads : \seq ManagedThreadEnv	
\end{schema}
%
\begin{schema}{ClusterEnv}
Sequencer : MissionSequencerEnv\\
Mission : MissionEnv \\
Schedulables : SchedulablesEnv 
\where
Schedulables.NestedSequencers \filter \{Sequencer\} = \langle \rangle
\end{schema}
%
\begin{schema}{getMission}
\Xi ClusterEnv \\
mission! : MissionEnv \\
\where 
mission! = Mission
\end{schema}
%
\begin{schema}{TierEnv}
Clusters : \seq ClusterEnv 
\end{schema}
%
\begin{schema}{ControlTierEnv}
Safelet : SafeletEnv\\
TopLevelSequencers : \seq TopLevelMissionSequencerEnv
\end{schema}
%
\begin{schema}{StructureEnv}
ControlTier : ControlTierEnv\\
Tiers : \seq TierEnv \\
CurrentTier : TierEnv \\
CurrentCluster : ClusterEnv
\end{schema}
%
\begin{schema}{newTier}
\Delta StructureEnv \\
%t : TierEnv \\
\where
\exists t : TierEnv | t.Clusters = \langle \rangle \land Tiers \filter \{ t \} = \langle \rangle \\
\t1 @ CurrentTier' = t \land Tiers' = Tiers \cat \langle t \rangle \\

ControlTier' = ControlTier \\
CurrentCluster' = CurrentCluster 
\end{schema}
%
\begin{schema}{newCluster}
\Delta StructureEnv \\
s? : MissionSequencerEnv \\
%c : ClusterEnv \\
\where
\exists c : ClusterEnv | c.Mission = nullMissionEnv \land c.Sequencer = s? \\
\t1 CurrentTier.Clusters \filter \{ c \} = \langle \rangle\\
\t1 @ CurrentCluster' = c \land CurrentTier'.Clusters = CurrentTier.Clusters \cat \langle c \rangle \land \\

CurrentTier' = CurrentTier \\ 
ControlTier' = ControlTier \\
Tiers' = Tiers 
\end{schema}
%
\begin{schema}{setSafelet}
\Delta ControlTierEnv \\
s? : SafeletEnv \\
\where
% Precon Safelet not set? Can only be set once
Safelet' = s? \\
TopLevelSequencers' = TopLevelSequencers
\end{schema}
%
\begin{schema}{addTopLevelSequencer}
\Delta ControlTierEnv \\
t? : TopLevelMissionSequencerEnv \\
\where
TopLevelSequencers \filter \{ t? \} = \langle \rangle \\
TopLevelSequencers' = TopLevelSequencers \cat \langle t? \rangle \\
Safelet' = Safelet
\end{schema}
%
\begin{schema}{addMission}
\Delta StructureEnv \\
m? : MissionEnv \\
\where 
CurrentCluster.Mission = nullMissionEnv \\
CurrentCluster'.Mission = m? \\
CurrentCluster' = CurrentCluster \\
CurrentTier' = CurrentTier \\
ControlTier' = ControlTier \\
Tiers' = Tiers
\end{schema}
%

\begin{schema}{ProgramEnv}
Structure : StructureEnv \\
NonSCJObjects : \power ObjectEnv
%Variables : Name \pfun Type
\end{schema}
