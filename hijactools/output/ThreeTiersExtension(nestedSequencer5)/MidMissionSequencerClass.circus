
\begin{circus}
\circclass MidMissionSequencerClass \circdef \circbegin
\end{circus}

\begin{schema}{\circstateignore State}
  releases : \num\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{\circinitial Init}
  State~'
\where
  releases' = 0\\ 
\end{schema}


\begin{circusaction}
\circprotected ~ getNextMission ~ \circdef
\circvar ret : MissionID \circspot
\\


      \circblockopen

  \circif ~ (releases = 0) ~ \circthen ~
  \\
  \t1

      \circblockopen

  \circvar missionA : MissionID \circspot missionA := MidMissionA ~


               \circseq \\

  releases := releases + 1



               \circseq \\

  ret := missionA


        \circblockclose


  \\
  \circelse ~ (releases = 0) ~ \circthen ~
  \\
  \t1
  \circif ~ (releases = 1) ~ \circthen ~
  \\
  \t1

      \circblockopen

  \circvar missionB : MissionID \circspot missionB := MidMissionB ~


               \circseq \\

  releases := releases + 1



               \circseq \\

  ret := missionB


        \circblockclose


  \\
  \circelse ~ (releases = 1) ~ \circthen ~
  \\
  \t1

      \circblockopen

  ret := nullMissionId


        \circblockclose


  \\
  \circfi

  \\
  \circfi


        \circblockclose

 

\end{circusaction}
%
%

\begin{circusaction}
\circspot ~ \Skip
\end{circusaction}

\begin{circus}
  \circend
\end{circus}


