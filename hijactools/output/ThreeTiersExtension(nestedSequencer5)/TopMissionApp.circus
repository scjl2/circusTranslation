\begin{zsection}
  \SECTION ~ TopMissionApp ~ \parents ~ scj\_prelude, MissionId, MissionIds, \\
  \t1 SchedulableId, SchedulableIds, MissionChan, SchedulableMethChan  \\

  \t1 , TopMissionMethChan
\end{zsection}
%\begin{circus}
%\circchannelset TopMissionAppSync == \\
%	\lchanset initializeCall,register, initializeRet,cleanupMissionCall, cleanupMissionRet  \rchanset
%\end{circus}

%\begin{circus}
%\circchannelset TopMissionAppChanSet == \\
% \lchanset initializeCall, initializeRet, cleanupMissionCall, cleanupMissionRet,

%    register~.~MT1~.~TopMission 
%    register~.~MidMissionSequencer~.~TopMission 
%\rchanset
%\end{circus}

\begin{circus}
\circprocess TopMissionApp \circdef  \circbegin
\end{circus}

\begin{schema}{State}
  this : \circreftype TopMissionClass\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~' \\
\where
  this' = \circnew TopMissionClass()\\ 
\end{schema}

\begin{circusaction}
InitializePhase \circdef \\
\circblockopen
  initializeCall~.~TopMission \then \\
  
	register~!~MT1~!~TopMission \then   \\
	register~!~MidMissionSequencer~!~TopMission \then   \\


  initializeRet~.~TopMission \then \\
  \Skip
\circblockclose 
\end{circusaction}
 
\begin{circusaction}
CleanupPhase \circdef  \\
\circblockopen
 cleanupMissionCall~.~TopMission \then \\

 cleanupMissionRet~.~TopMission~!~\true \then \\
 \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef 
\circblockopen
	InitializePhase \\
	\extchoice \\
	CleanupPhase \\
%
%
%
\circblockclose 
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( \lschexpract Init \rschexpract \circseq Methods) 
 \circinterrupt (end\_mission\_app~.~TopMission \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
