\begin{zsection}
  \SECTION ~ ThirdMissionSequencerApp ~ \parents ~ TopLevelMissionSequencerChan,\\
  \t1 MissionId, MissionIds, SchedulableId, SchedulableIds  , ThirdMissionSequencerClass, MethodCallBindingChannels 

  \t1 

\end{zsection}

%\begin{circus}
%\circchannelset ThirdMissionSequencerAppChanSet == ThirdMissionSequencerSIDAppSync
%\end{circus}

\begin{circus}
\circprocess ThirdMissionSequencerApp \circdef  \circbegin\\
\end{circus}

\begin{schema}{State}
  this : \circreftype ThirdMissionSequencerClass\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~' \\
\where
  this' = \circnew ThirdMissionSequencerClass()\\ 
\end{schema}

\begin{circusaction}
GetNextMission \circdef \circvar ret : MissionID \circspot \\
\circblockopen
    getNextMissionCall~.~ThirdMissionSequencerSID \then \\
	   ret := this~.~getNextMission() \circseq \\
    getNextMissionRet~.~ThirdMissionSequencerSID~!~ret  \then \\
\Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef  \\
\circblockopen
	GetNextMission \\
%
%
%
\circblockclose
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( \lschexpract Init \rschexpract \circseq Methods) 
  %\circhide MissionSequencerAppStateSync
\circinterrupt (end\_sequencer\_app~.~ThirdMissionSequencerSID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
