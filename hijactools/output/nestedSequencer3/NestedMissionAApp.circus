\begin{zsection}
  \SECTION ~ NestedMissionAApp ~ \parents ~ scj\_prelude, MissionId, MissionIds, \\
  \t1 SchedulableId, SchedulableIds, MissionChan, SchedulableMethChan, NestedMissionAMethChan \\
 , MethodCallBindingChannels 
 

\end{zsection}


%\begin{circus}
%\circchannelset NestedMissionAAppChanSet == \\
% \lchanset initializeCall, initializeRet, cleanupMissionCall, cleanupMissionRet,

%    register~.~MT1SID~.~NestedMissionAMID
%\rchanset
%\end{circus}

\begin{circus}
\circprocess NestedMissionAApp \circdef  \circbegin
\end{circus}

\begin{schema}{State}
  this : \circreftype NestedMissionAClass\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~' \\
\where
  this' = \circnew NestedMissionAClass()\\ 
\end{schema}

\begin{circusaction}
InitializePhase \circdef \\
\circblockopen
  initializeCall~.~NestedMissionAMID \then \\

	register~!~MT1SID~!~NestedMissionAMID \then   \\


  initializeRet~.~NestedMissionAMID \then \\
  \Skip
\circblockclose
\end{circusaction}

\begin{circusaction}
CleanupPhase \circdef  \\
\circblockopen
\circvar \boolean : ret @
 cleanupMissionCall~.~NestedMissionAMID \then \\

 cleanupMissionRet~.~NestedMissionAMID~!~\true \then \\
 \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef
\circblockopen
	InitializePhase \\
	\extchoice \\
	CleanupPhase \\
%
%
%
\circblockclose
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( \lschexpract Init \rschexpract \circseq Methods) 
 \circinterrupt (end\_mission\_app~.~NestedMissionAMID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
