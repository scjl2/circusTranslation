\begin{zsection}
  \SECTION ~ SafeLandingHandlerApp ~ \parents ~ AperiodicEventHandlerChan, SchedulableId, SchedulableIds
 \t1  , \\
LandMissionMethChan



\end{zsection}

\begin{circus}
\circprocess SafeLandingHandlerApp \circdef \\ \qquad 
  AperiodicParameters : 
, \\ \qquad 
   : LandMissionID
, \\ \qquad 
  SAFE\_LANDING\_ALTITUDE : double
\circspot 
  \circbegin
\end{circus}


\begin{circusaction}
handlerAsyncEvent \circdef \\
\circblockopen
	handleAsyncEventCall~.~SafeLandingHandler \then \\
	
      \circblockopen

            getControllingMissionCall~.~landMission.getControllingMission()\then \\getControllingMissionRet~.~landMission.getControllingMission()~?~getControllingMission\then \\\\ \circvar altitude : double \circspot altitude :=~getAltitude\\


  \circif ~ (altitude < threshold) ~ \circthen ~
  \\
  \t1

      \circblockopen

\Skip
 

        \circblockclose  


  \\
  \circelse ~ \lnot (altitude < threshold) ~ \circthen ~
  \\
  \t1

      \circblockopen

\Skip
 

        \circblockclose  


  \\
  \circfi
 

        \circblockclose  

 \circseq \\
    handleAsyncEventRet~.~SafeLandingHandler \then \\
    \Skip
\circblockclose
\end{circusaction}
    
%
%

\begin{circusaction}
Methods \circdef \\
\circblockopen
	handlerAsyncEvent \\
%
%
%
\circblockclose 
	 \circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( Methods) 
  \circinterrupt (end\_\_app~.~SafeLandingHandler \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
