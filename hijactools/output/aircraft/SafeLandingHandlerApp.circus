\begin{zsection}
  \SECTION ~ SafeLandingHandlerApp ~ \parents ~ AperiodicEventHandlerChan, SchedulableId, SchedulableIds \\
 \t1  , 
MainMissionMethChan



\end{zsection}

\begin{circus}
\circprocess SafeLandingHandlerApp \circdef \\ \t1
  mainMission : MissionID
,\\
  threshold : Double

\circspot
  \circbegin
\end{circus}


\begin{circusaction}
handleAsyncEvent \circdef \\
\circblockopen
	handleAsyncEventCall~.~SafeLandingHandlerSID \then \\
	
      \circblockopen

binder\_getAltitudeCall~.~mainMission~.~SafeLandingHandlerSID\then  \\ binder\_getAltitudeRet~.~mainMission~.~SafeLandingHandlerSID~?~getAltitude\then  \\ \ \ \circvar altitude : \power \arithmos \circspot altitude :=~getAltitude\ \

               \circseq \\

  \circif ~ (altitude < threshold) ~ \circthen ~
  \\
  \t1

      \circblockopen

      
        \circblockclose


  \\
  \circelse ~ \lnot (altitude < threshold) ~ \circthen ~
  \\
  \t1

      \circblockopen

      
        \circblockclose


  \\
  \circfi


        \circblockclose

 \circseq \\
    handleAsyncEventRet~.~SafeLandingHandlerSID \then \\
    \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef \\
\circblockopen
	handleAsyncEvent \\
%
%
%
\circblockclose
	 \circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( Methods) 
  \circinterrupt (end\_aperiodic\_app~.~SafeLandingHandlerSID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
