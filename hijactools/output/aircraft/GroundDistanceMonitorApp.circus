\begin{zsection}
  \SECTION ~ GroundDistanceMonitorApp ~ \parents ~ PeriodicEventHandlerChan, SchedulableId, SchedulableIds , MethodCallBindingChannels 
 \\
 \t1  ,
MainMissionMethChan




\end{zsection}

\begin{circus}
\circprocess GroundDistanceMonitorApp \circdef \\ \t1
  mainMission : MissionID

\circspot
  \circbegin
\end{circus}


\begin{circusaction}
handleAsyncEvent \circdef \\
\circblockopen
	handleAsyncEventCall~.~GroundDistanceMonitorSID \then \\
	
      \circblockopen
            \Skip
             \circseq \\ 



            binder\_getAltitudeCall~.~mainMission~.~GroundDistanceMonitorSID\then \\binder\_getAltitudeRet~.~mainMission~.~GroundDistanceMonitorSID~?~getAltitude\then \\\Skip\circseq \circvar distance : \power \arithmos \circspot distance :=~getAltitude
             \circseq \\ 



              \circif ~ (distance = this~.~readingOnGround) ~ \circthen ~
  \\
\t1 
      \circblockopen
            \Skip
             \circseq \\ 



            requestTerminationCall~.~mainMission~.~GroundDistanceMonitorSID\then \\requestTerminationRet~.~mainMission~.~GroundDistanceMonitorSID~?~requestTermination\then \\\Skip

            




        \circblockclose


  \\
  \circelse ~ \lnot (distance = this~.~readingOnGround) \circthen \Skip
  \\
  \circfi \\

            




        \circblockclose

 \circseq \\
    handleAsyncEventRet~.~GroundDistanceMonitorSID \then \\
    \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef \\
\circblockopen
	handleAsyncEvent \\
%
%
%
\circblockclose
	 \circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( Methods) 
  \circinterrupt (end\_periodic\_app~.~GroundDistanceMonitorSID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
