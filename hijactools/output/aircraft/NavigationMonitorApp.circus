\begin{zsection}
  \SECTION ~ NavigationMonitorApp ~ \parents ~ PeriodicEventHandlerChan, SchedulableId, SchedulableIds \\
 \t1  , 
MainMissionMethChan



\end{zsection}

\begin{circus}
\circprocess NavigationMonitorApp \circdef \\ \t1
  mainMission : MissionID

\circspot
  \circbegin
\end{circus}


\begin{circusaction}
handleAsyncEvent \circdef \\
\circblockopen
	handleAsyncEventCall~.~NavigationMonitorSID \then \\
	
      \circblockopen

binder\_getHeadingCall~.~mainMission~.~NavigationMonitorSID\then  \\ binder\_getHeadingRet~.~mainMission~.~NavigationMonitorSID~?~getHeading\then  \\ \ \ \circvar heading : \power \arithmos \circspot heading :=~getHeading\ \

               \circseq \\

binder\_getAirSpeedCall~.~mainMission~.~NavigationMonitorSID\then  \\ binder\_getAirSpeedRet~.~mainMission~.~NavigationMonitorSID~?~getAirSpeed\then  \\ \ \ \circvar airSpeed : \power \arithmos \circspot airSpeed :=~getAirSpeed\ \

               \circseq \\

binder\_getAltitudeCall~.~mainMission~.~NavigationMonitorSID\then  \\ binder\_getAltitudeRet~.~mainMission~.~NavigationMonitorSID~?~getAltitude\then  \\ \ \ \circvar altitude : \power \arithmos \circspot altitude :=~getAltitude\ \

        \circblockclose

 \circseq \\
    handleAsyncEventRet~.~NavigationMonitorSID \then \\
    \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef \\
\circblockopen
	handleAsyncEvent \\
%
%
%
\circblockclose
	 \circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( Methods) 
  \circinterrupt (end\_periodic\_app~.~NavigationMonitorSID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
