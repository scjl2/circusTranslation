\begin{zsection}
  \SECTION ~ ACModeChangerApp ~ \parents ~ TopLevelMissionSequencerChan,\\
  \t1 MissionId, MissionIds, SchedulableId  , ACModeChangerClass \\

  \t1 
\end{zsection}
%\begin{circus}
%\circchannelset ACModeChangerAppSync == \\ \lchanset getNextMissionCall, getNextMissionRet,end\_sequencer\_app \rchanset
%\end{circus}

%\begin{circus}
%\circchannelset ACModeChangerAppChanSet == ACModeChangerAppSync
%\end{circus}

\begin{circus}
\circprocess ACModeChangerApp \circdef \\ \qquad 
  PriorityParameters : 
, \\ \qquad 
   : Probably Mission
\circspot 
 \circbegin\\ 
\end{circus}
   

\begin{circusaction}
GetNextMission \circdef \circvar ret : MissionID \circspot \\
\circblockopen
    getNextMissionCall~.~ACModeChanger \then \\
	ret := this~.~getNextMission() \circseq \\
    getNextMissionRet~.~ACModeChanger~!~ret  \then \\
\Skip
\circblockclose	
\end{circusaction}

\begin{circusaction}
changeToMeth \circdef 
\\
\circblockopen
changeToCall~.~ACModeChanger 
~?~newMode
\then \\

      \circblockopen

this~.~currentMode :=newMode
 

        \circblockclose  

  \circseq  \\

changeToRet~.~ACModeChanger \then \\
\Skip
\circblockclose
\end{circusaction}	
%
\begin{circusaction}
advanceModeSyncMeth \circdef 
\\
\circblockopen
advanceModeCall~.~ACModeChanger~?~thread 
 \then \\
\circblockopen
startSyncMeth~.~ACModeChangerObject~.~thread \then \\
lockAcquired~.~ACModeChangerObject~.~thread \then \\

      \circblockopen

\Skip
 

               \circseq \\ 

  \circif ~ (modesLeft = 3) ~ \circthen ~
  \\
  \t1

      \circblockopen

  modesLeft := modesLeft - 1

 

               \circseq \\ 

  changeTo(launchMode)  

 

        \circblockclose  


  \\
  \circelse ~ \lnot (modesLeft = 3) ~ \circthen ~
  \\
  \t1
  \circif ~ (modesLeft = 2) ~ \circthen ~
  \\
  \t1

      \circblockopen

  modesLeft := modesLeft - 1

 

               \circseq \\ 

  changeTo(cruiseMode)  

 

        \circblockclose  


  \\
  \circelse ~ \lnot (modesLeft = 2) ~ \circthen ~
  \\
  \t1
  \circif ~ (modesLeft = 1) ~ \circthen ~
  \\
  \t1

      \circblockopen

  modesLeft := modesLeft - 1

 

               \circseq \\ 

  changeTo(landMode)  

 

        \circblockclose  


  \\
  \circelse ~ \lnot (modesLeft = 1) ~ \circthen ~
  \\
  \t1

      \circblockopen

  changeTo(\circnull)  

 

        \circblockclose  


  \\
  \circfi

  \\
  \circfi

  \\
  \circfi
 

        \circblockclose  

 \circseq  \\
endSyncMeth~.~ACModeChangerObject~.~thread \then  \\

advanceModeRet~.~ACModeChanger~.~thread \then \\
\Skip
\circblockclose
\circblockclose
\end{circusaction}	
%

\begin{circusaction}
Methods \circdef  \\
\circblockopen
	GetNextMission \\
%
\extchoice \\
	changeToMeth \\ 
%
	\extchoice \\
	advanceModeSyncMeth \\	
%
\circblockclose 
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( Methods) 
  %\circhide MissionSequencerAppStateSync
\circinterrupt (end\_sequencer\_app~.~ACModeChanger \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
