\begin{zsection}
  \SECTION ~ BottomMissionAApp ~ \parents ~ scj\_prelude, MissionId, MissionIds, \\
  \t1 SchedulableId, SchedulableIds, MissionChan, SchedulableMethChan, BottomMissionAMethChan \\
 , MethodCallBindingChannels 
 

\end{zsection}


%\begin{circus}
%\circchannelset BottomMissionAAppChanSet == \\
% \lchanset initializeCall, initializeRet, cleanupMissionCall, cleanupMissionRet,

%    register~.~OSEHSID~.~BottomMissionAMID
%    register~.~MT2SID~.~BottomMissionAMID
%\rchanset
%\end{circus}

\begin{circus}
\circprocess BottomMissionAApp \circdef  \circbegin
\end{circus}

\begin{schema}{State}
  this : \circreftype BottomMissionAClass\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~' \\
\where
  this' = \circnew BottomMissionAClass()\\ 
\end{schema}

\begin{circusaction}
InitializePhase \circdef \\
\circblockopen
  initializeCall~.~BottomMissionAMID \then \\

	register~!~OSEHSID~!~BottomMissionAMID \then   \\
	register~!~MT2SID~!~BottomMissionAMID \then   \\


  initializeRet~.~BottomMissionAMID \then \\
  \Skip
\circblockclose
\end{circusaction}

\begin{circusaction}
CleanupPhase \circdef  \\
\circblockopen
\circvar \boolean : ret @
 cleanupMissionCall~.~BottomMissionAMID \then \\

 cleanupMissionRet~.~BottomMissionAMID~!~\true \then \\
 \Skip
\circblockclose
\end{circusaction}

%
%

\begin{circusaction}
Methods \circdef
\circblockopen
	InitializePhase \\
	\extchoice \\
	CleanupPhase \\
%
%
%
\circblockclose
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( \lschexpract Init \rschexpract \circseq Methods) 
 \circinterrupt (end\_mission\_app~.~BottomMissionAMID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
