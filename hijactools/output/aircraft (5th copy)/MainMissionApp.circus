\begin{zsection}
  \SECTION ~ MainMissionApp ~ \parents ~ scj\_prelude, MissionId, MissionIds, \\
  \t1 SchedulableId, SchedulableIds, MissionChan, SchedulableMethChan, MainMissionMethChan \\
 , MainMissionClass, MethodCallBindingChannels 
 

\end{zsection}


%\begin{circus}
%\circchannelset MainMissionAppChanSet == \\
% \lchanset initializeCall, initializeRet, cleanupMissionCall, cleanupMissionRet,

%    register~.~ACModeChanger2SID~.~MainMissionMID
%    register~.~EnvironmentMonitorSID~.~MainMissionMID
%    register~.~ControlHandlerSID~.~MainMissionMID
%    register~.~FlightSensorsMonitorSID~.~MainMissionMID
%    register~.~CommunicationsHandlerSID~.~MainMissionMID
%\rchanset
%\end{circus}

\begin{circus}
\circprocess MainMissionApp \circdef  \circbegin
\end{circus}

\begin{schema}{State}
  this : \circreftype MainMissionClass\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~' \\
\where
  this' = \circnew MainMissionClass()\\ 
\end{schema}

\begin{circusaction}
InitializePhase \circdef \\
\circblockopen
  initializeCall~.~MainMissionMID \then \\
	register~!~ACModeChanger2SID~!~MainMissionMID \then \\
	register~!~EnvironmentMonitorSID~!~MainMissionMID \then \\
	register~!~ControlHandlerSID~!~MainMissionMID \then \\
	register~!~FlightSensorsMonitorSID~!~MainMissionMID \then \\
	register~!~CommunicationsHandlerSID~!~MainMissionMID \then \\
  initializeRet~.~MainMissionMID \then \\
  \Skip
\circblockclose
\end{circusaction}

\begin{circusaction}
CleanupPhase \circdef
\\
\circblockopen
 cleanupMissionCall~.~MainMissionMID \then \\
 cleanupMissionRet~.~MainMissionMID~!~\true \then \\
 \Skip
\circblockclose
\end{circusaction}

\begin{circusaction}
getAirSpeedMeth \circdef
\circvar ret : \power \arithmos \circspot
\\
\circblockopen
getAirSpeedCall~.~MainMissionMID ~?~caller
\then \\
ret := this~.~getAirSpeed()  \circseq  \\

getAirSpeedRet~.~MainMissionMID~.~caller~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
getAltitudeMeth \circdef
\circvar ret : \power \arithmos \circspot
\\
\circblockopen
getAltitudeCall~.~MainMissionMID ~?~caller
\then \\
ret := this~.~getAltitude()  \circseq  \\

getAltitudeRet~.~MainMissionMID~.~caller~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
getCabinPressureMeth \circdef
\circvar ret : \power \arithmos \circspot
\\
\circblockopen
getCabinPressureCall~.~MainMissionMID
\then \\
ret := this~.~getCabinPressure()  \circseq  \\

getCabinPressureRet~.~MainMissionMID~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
getEmergencyOxygenMeth \circdef
\circvar ret : \power \arithmos \circspot
\\
\circblockopen
getEmergencyOxygenCall~.~MainMissionMID
\then \\
ret := this~.~getEmergencyOxygen()  \circseq  \\

getEmergencyOxygenRet~.~MainMissionMID~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
getFuelRemainingMeth \circdef
\circvar ret : \power \arithmos \circspot
\\
\circblockopen
getFuelRemainingCall~.~MainMissionMID
\then \\
ret := this~.~getFuelRemaining()  \circseq  \\

getFuelRemainingRet~.~MainMissionMID~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
getHeadingMeth \circdef
\circvar ret : \power \arithmos \circspot
\\
\circblockopen
getHeadingCall~.~MainMissionMID ~?~caller
\then \\
ret := this~.~getHeading()  \circseq  \\

getHeadingRet~.~MainMissionMID~.~caller~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
setAirSpeedMeth \circdef
\\
\circblockopen
setAirSpeedCall~.~MainMissionMID ~?~caller
~?~newAirSpeed
\then \\
this~.~setAirSpeed(newAirSpeed)  \circseq  \\

setAirSpeedRet~.~MainMissionMID~.~caller \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
setAltitudeMeth \circdef
\\
\circblockopen
setAltitudeCall~.~MainMissionMID ~?~caller
~?~newAltitude
\then \\
this~.~setAltitude(newAltitude)  \circseq  \\

setAltitudeRet~.~MainMissionMID~.~caller \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
setCabinPressureMeth \circdef
\\
\circblockopen
setCabinPressureCall~.~MainMissionMID ~?~caller
~?~newCabinPressure
\then \\
this~.~setCabinPressure(newCabinPressure)  \circseq  \\

setCabinPressureRet~.~MainMissionMID~.~caller \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
setEmergencyOxygenMeth \circdef
\\
\circblockopen
setEmergencyOxygenCall~.~MainMissionMID ~?~caller
~?~newEmergencyOxygen
\then \\
this~.~setEmergencyOxygen(newEmergencyOxygen)  \circseq  \\

setEmergencyOxygenRet~.~MainMissionMID~.~caller \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
setFuelRemainingMeth \circdef
\\
\circblockopen
setFuelRemainingCall~.~MainMissionMID ~?~caller
~?~newFuelRemaining
\then \\
this~.~setFuelRemaining(newFuelRemaining)  \circseq  \\

setFuelRemainingRet~.~MainMissionMID~.~caller \then \\
\Skip
\circblockclose
\end{circusaction}
\begin{circusaction}
setHeadingMeth \circdef
\\
\circblockopen
setHeadingCall~.~MainMissionMID ~?~caller
~?~newHeading
\then \\
this~.~setHeading(newHeading)  \circseq  \\

setHeadingRet~.~MainMissionMID~.~caller \then \\
\Skip
\circblockclose
\end{circusaction}
%
%

\begin{circusaction}
Methods \circdef
\circblockopen
	InitializePhase \\
	\extchoice \\
	CleanupPhase \\
%
\extchoice \\
	getAirSpeedMeth \\ 
\extchoice \\
	getAltitudeMeth \\ 
\extchoice \\
	getCabinPressureMeth \\ 
\extchoice \\
	getEmergencyOxygenMeth \\ 
\extchoice \\
	getFuelRemainingMeth \\ 
\extchoice \\
	getHeadingMeth \\ 
\extchoice \\
	setAirSpeedMeth \\ 
\extchoice \\
	setAltitudeMeth \\ 
\extchoice \\
	setCabinPressureMeth \\ 
\extchoice \\
	setEmergencyOxygenMeth \\ 
\extchoice \\
	setFuelRemainingMeth \\ 
\extchoice \\
	setHeadingMeth \\ 
%
%
\circblockclose
\circseq Methods
\end{circusaction}

\begin{circusaction}
\circspot ( \lschexpract Init \rschexpract \circseq Methods) 
 \circinterrupt (end\_mission\_app~.~MainMissionMID \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
