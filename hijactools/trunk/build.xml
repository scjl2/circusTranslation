<?xml version="1.0"?>
<project name="hijac" default="compile"
    xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <!-- Application Name and Version -->
  <property name="hijac.name" value="hijac"/>
  <property name="hijac.version" value="0.1"/>

  <!-- Configuration of Locations -->
  <property name="ant.dir" location="ant"/>
  <property name="lib.dir" location="lib"/>
  <property name="src.dir" location="src/java"/>
  <property name="target.dir" location="target"/>
  <property name="classes.dir" location="${target.dir}/classes"/>
  <property name="javadoc.dir" location="${target.dir}/javadoc"/>
  <property name="distro.dir" location="distro"/>

  <!-- Auxiliary Properties -->
  <property name="jar.name" value="${hijac.name}-v${hijac.version}"/>
  <property name="tar.name" value="${hijac.name}-v${hijac.version}"/>

  <!-- JDK Compiler Tools -->
  <file id="tools.jar" file="${java.home}/../lib/tools.jar"/>

  <!-- Javac Compiler Options -->
  <property name="javac.options" value="-Xlint:unchecked"/>

  <!-- Java Run-time Options -->
  <property name="java.options" value="-enableassertions"/>

  <!-- Classpath for Compilation -->
  <path id="javac.classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <file refid="tools.jar"/>
  </path>

  <!-- Classpath for Execution -->
  <path id="java.classpath">
    <pathelement path="${classes.dir}"/>
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
      <exclude name="${jar.name}.jar"/>
    </fileset>
    <file refid="tools.jar"/>
  </path>

  <!-- Property that is needed by get-m2.xml. -->
  <property name="m2.dest.dir" location="${ant.dir}"/>

  <!-- Tool that facilitates the fetching of Maven artifacts. -->
  <import file="${ant.dir}/fetch-m2.xml"/>

  <!-- Common target for deferred macros definitions. -->
  <target name="macros" depends="fetch-macro"/>

  <!-- Targets for fetching third-party libraries. -->
  <target name="checkers" depends="macros">
    <fetch-m2
      groupId="types.checkers"
      artifactId="framework"
      version="1.7.4"
      remoteUrl="http://types.cs.washington.edu/m2-repo"/>
  </target>

 

  <target name="freemarker" depends="macros">
    <fetch-m2
      groupId="org.freemarker"
      artifactId="freemarker"
      version="2.3.25-incubating"/>
  </target>

  <!-- Target for installing third-party libraries. -->
  <!-- <target name="install-libs" depends="checkers-framework,freemarker"/> -->
  <target name="install-libs" depends="checkers,freemarker"/>

  <!-- Target for compilation of the Java sources. -->
  <target name="compile" depends="install-libs">
    <mkdir dir="${target.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}"
        includeAntRuntime="false" debug="true" debuglevel="lines,vars,source">
      <classpath refid="javac.classpath"/>
      <compilerarg value="${javac.options}"/>
      <!-- <exclude name="javax/realtime/**"/> -->
      <!-- <exclude name="javax/safetycritical/**"/> -->
    </javac>
  </target>

  <!-- Target for generating javadoc documentation. -->
  <target name="doc" depends="install-libs">
    <javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}"
        excludepackagenames="javax.safetycritical"
        access="protected" linksource="true">
        <!-- stylesheetfile="misc/stylesheet.css" -->
      <classpath refid="javac.classpath"/>
      <header><![CDATA[HiJaC Tools API &nbsp;]]></header>
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
      <link href="http://download.oracle.com/javase/6/docs/jdk/api/javac/tree/"/>
      <link href="http://freemarker.sourceforge.net/docs/api"/>
 	<link href="https://commons.apache.org/proper/commons-lang/javadocs/api-release/index.html"/>
	
    </javadoc>
  </target>

  <!-- Targets for generating the distribution jar. -->
  <target name="install" depends="compile,doc">
    <jar jarfile="${lib.dir}/${jar.name}.jar" basedir="${classes.dir}"/>
  </target>

  <!-- Target for generating the source distribution. -->
  <target name="distro" depends="distclean">
    <mkdir dir="${distro.dir}"/>
    <tar destfile="${distro.dir}/${tar.name}-src.tar.gz" compression="gzip">
      <tarfileset dir="." prefix="${tar.name}">
        <include name="build.xml"/>
        <include name="hijac.properties"/>
        <include name="run.bat"/>
        <!-- For some reason we cannot use ${...} here. -->
        <include name="ant/**"/>
        <include name="circus-model/**"/>
        <include name="demo/**"/>
        <include name="lib/**"/>
        <include name="misc/**"/>
        <include name="model-output/**"/>
        <include name="src/**"/>
      </tarfileset>
      <tarfileset dir="." prefix="${tar.name}" filemode="755">
        <include name="compile"/>
        <include name="run"/>
      </tarfileset>
    </tar>
  </target>

  <!-- Target for running the example. -->
  <target name="run">
    <java classname="hijac.tools.application.Analyser" fork="true">
      <classpath refid="java.classpath"/>
      <jvmarg value="${java.options}"/>
    </java>
  </target>

  <!-- Target for removing generated files. -->
  <target name="clean">
    <delete dir="${target.dir}"/>
    <delete dir="${distro.dir}"/>
  </target>

  <!-- Target for removing generated files and libraries. -->
  <target name="distclean" depends="clean">
    <delete dir="lib" includes="*.jar"/>
    <delete dir="ant" includes="*.jar"/>
  </target>
</project>
