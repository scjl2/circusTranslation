\begin{zsection}
  \SECTION ~ TopMission1App~ \parents ~ SafeletMethChan, MissionId, MissionIds, \\
  \t1 SchedulableId, MissionChan, SchedulableChan, FrameworkChan, ServicesChan, \\
  \t1 scj\_prelude
\end{zsection}
%
\begin{circus}
\circprocess  ~ TopMission1App \circdef \circbegin
\end{circus}
%public class TopMission1 extends Mission {
%	protected void initialize() {
%		FirstSequencer FirstSeq = new FirstSequencer(new PriorityParameters(5), MySCJ.storageParameters);
%		FirstSeq.register();
%
%		SecondMissionSequencer SecondSeq = new SecondMissionSequencer(new PriorityParameters(15), MySCJ.storageParameters);
%		SecondSeq.register();
%
%		ThirdMissionSequencer ThirdSeq = new ThirdMissionSequencer(new PriorityParameters(10), MySCJ.storageParameters);
%		ThirdSeq.register();
%	}
%
%	public long missionMemorySize() {
%		return 60000;
%	}
%}
\begin{circusaction}
InitializePhase \circdef \\
\t1  initializeCall~.~TopMission1ID  \then \\
\t1  register~!~FirstMissionSequencerID~!~TopMission1ID \then \\
\t1  register~!~SecondMissionSequencerID~!~TopMission1ID \then \\
\t1  register~!~ThirdMissionSequencerID~!~TopMission1ID \then \\
\t1  initializeRet~.~TopMission1ID \then \\
\t1 \Skip
\end{circusaction}
%
\begin{circusaction}
CleanupPhase \circdef \\
\t1 cleanupMissionCall~.~TopMission1ID \then\\
\t1 cleanupMissionRet~.~TopMission1ID~?~continueSequencer \then\\
\t1	\Skip
\end{circusaction}
%
\begin{circusaction}
Methods \circdef \\
\t1 \circmu X \circspot \left( \begin{array}{l}
		InitializePhase \\
		\extchoice \\
		CleanupPhase
	\end{array} \right) \circseq X
\end{circusaction}
%
\begin{circusaction}
\circspot \circmu X \circspot \left( \begin{array}{l}
					\left( \begin{array}{l}
						Methods 
						\\\circinterrupt \\
						(end\_mission\_app~.~TopMission1ID \then X )
				   	\end{array} \right) 
				   	\\\circinterrupt \\
				   		(end\_mission\_fw~.~TopMission1ID \then \Skip)
				  \end{array} \right)
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}