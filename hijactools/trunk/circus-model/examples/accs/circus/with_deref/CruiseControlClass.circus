\begin{zsection}
  \SECTION ~ CruiseControlClass ~ \parents ~ scj\_toolkit, scj\_library,\\
  \t1 ThrottleControllerClass, SpeedMonitorClass
\end{zsection}

\paragraph{Class Definition}~

\begin{circusbox}
\begin{circus}
  \circclass ~ CruiseControlClassDef ~ \circdef ~ \circbegin
\end{circus}

\begin{schema}{\circstateignore ~ CruiseControlState}
  engineActive : boolean\\
  topGear : boolean\\
  braking : boolean\\
  accelerating : boolean\\
  cruising : boolean\\
  throttle :ThrottleControllerClass\\
  throttleStarted : boolean\\
  speed : SpeedMonitorClass
\end{schema}

\comment{
\begin{circusaction}
  \circstate ~ CruiseControlState
\end{circusaction}
}

\begin{schema}{\circinitial ~ CruiseControlInit}
  CruiseControlState~'\\
  throttle? : ThrottleControllerClass\\
  speed? : SpeedMonitorClass
\where
  engineActive' = jfalse\\
  topGear' = jfalse\\
  braking' = jfalse\\
  accelerating' = jfalse\\
  cruising' = jfalse\\
  throttle' = throttle?\\
  speed' = speed?
\end{schema}

\begin{circusaction*}
  \circpublic \circatomic activate ~ \circdef\\
  \t1 \circif engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \circthen\\
  \t2 cruising := jtrue \circseq\\
  \t2 (\circderef throttle).setCruiseSpeed((\circderef speed).getCurrentSpeed()) \circseq\\
  \t2 \circif throttleStarted = jtrue \circthen (\circderef throttle).schedulePeriodic()\\
  \t2 \circelse ~ \lnot (throttleStarted = jtrue) \circthen\\
  \t3 throttleStarted := jtrue \circseq\\
  \t3 (\circderef throttle).schedulePeriodic()\\
  \t2 \circfi\\
  \t1 \circelse ~ \lnot (engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue)) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction*}
  \circpublic \circatomic activate ~ \circdef\\
  \t1 \circif engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \circthen\\
  \t2 cruising := jtrue \circseq\\
  \t2 (\circderef throttle).setCruiseSpeed((\circderef speed).getCurrentSpeed()) \circseq\\
  \t2 \circif throttleStarted = jtrue \circthen (\circderef throttle).schedulePeriodic()\\
  \t2 \circelse ~ \lnot (throttleStarted = jtrue) \circthen\\
  \t3 throttleStarted := jtrue \circseq\\
  \t3 (\circderef throttle).schedulePeriodic()\\
  \t2 \circfi\\
  \t1 \circelse ~ \lnot (engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue)) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}
\end{circusbox}

\begin{circusbox}
\begin{circusaction*}
  \circpublic \circatomic deactivate ~ \circdef\\
  \t1 \circif engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \land\\
  \t3 cruising = jtrue \circthen\\
  \t2 cruising := jfalse \circseq\\
  \t2 (\circderef throttle).deschedulePeriodic()\\
  \t1 \circelse ~ \lnot (engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \land\\
  \t3 cruising = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction*}
  \circpublic \circatomic startAcceleration ~ \circdef\\
  \t1 \circif engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \circthen\\
  \t2 accelerating = jtrue \circseq\\
  \t2 \circif throttleStarted = jtrue \circthen (\circderef throttle).schedulePeriodic()\\
  \t2 \circelse ~ \lnot (throttleStarted = jtrue) \circthen\\
  \t3 throttleStarted := jtrue \circseq\\
  \t3 (\circderef throttle).schedulePeriodic()\\
  \t2 \circfi \circseq\\
  \t2 (\circderef throttle).accelerate()\\
  \t1 \circelse ~ \lnot (engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue)) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction*}
  \circpublic \circatomic stopAcceleration ~ \circdef\\
  \t1 \circif engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \land\\
  \t3 accelerating = jtrue \circthen\\
  \t2 accelerating := jfalse \circseq\\
  \t2 cruising := jtrue \circseq\\
  \t2 (\circderef throttle).setCruiseSpeed((\circderef speed).getCurrentSpeed())\\
  \t1 \circelse ~ \lnot (engineActive = jtrue \land topGear = jtrue \land \lnot (braking = jtrue) \land\\
  \t3 accelerating = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction*}
  \circpublic \circatomic resume ~ \circdef\\
  \t1 \circif topGear = jtrue \land \lnot (braking = jtrue) \land throttleStarted = jtrue \circthen\\
  \t2 cruising := jtrue \circseq\\
  \t2 (\circderef throttle).schedulePeriodic()\\
  \t1 \circelse \lnot (topGear = jtrue \land \lnot (braking = jtrue) \land throttleStarted = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction}
  \circpublic \circatomic engineOn ~ \circdef\\
  \t1 engineActive := jtrue \circseq\\
  \t1 braking := jfalse \circseq\\
  \t1 topGear := jfalse \circseq\\
  \t1 cruising := jfalse
\end{circusaction}

\begin{circusaction*}
  \circpublic \circatomic engineOff ~ \circdef\\
  \t1 engineActive := jfalse \circseq\\
  \t1 braking := jfalse \circseq\\
  \t1 topGear := jfalse \circseq\\
  \t1 \circif cruising = jtrue ~ \circthen\\
  \t2 cruising := jfalse \circseq\\
  \t2 (\circderef throttle).deschedulePeriodic()\\
  \t1 \circelse \lnot (cruising = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}
\end{circusbox}

\begin{circusbox}
\begin{circusaction}
  \circpublic \circatomic topGearEngaged ~ \circdef\\
  \t1 \circif engineActive = jtrue \circthen\\
  \t2 topGear := jtrue\\
  \t1 \circelse ~ \lnot (engineActive = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction}

\begin{circusaction*}
  \circpublic \circatomic topGearDisengaged ~ \circdef\\
  \t1 \circif engineActive = jtrue \circthen\\
  \t2 topGear := jfalse \circseq\\
  \t2 \circif cruising = jtrue \circthen\\
  \t3 cruising := jfalse \circseq\\
  \t3 (\circderef throttle).deschedulePeriodic()\\
  \t2 \circelse ~ \lnot (cruising = jtrue) \circthen Skip\\
  \t2 \circfi\\
  \t1 \circelse ~ \lnot (engineActive = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction*}
  \circpublic \circatomic brakeEngaged ~ \circdef\\
  \t1 \circif engineActive = jtrue \circthen\\
  \t2 \circif cruising = jtrue \circthen\\
  \t3 cruising := jfalse \circseq\\
  \t3 (\circderef throttle).deschedulePeriodic()\\
  \t2 \circelse ~ \lnot (cruising = jtrue) \circthen Skip\\
  \t2 \circfi \circseq\\
  \t2 braking := jtrue\\
  \t1 \circelse ~ \lnot (engineActive = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction*}

\begin{circusaction}
  \circpublic \circatomic brakeDisengaged ~ \circdef\\
  \t1 \circif engineActive = jtrue \circthen\\
  \t2 braking := jfalse\\
  \t1 \circelse ~ \lnot (engineActive = jtrue) \circthen Skip\\
  \t1 \circfi
\end{circusaction}

\comment{
\begin{circusaction}
  \circspot Skip
\end{circusaction}
}

\begin{circus}
  \circend
\end{circus}
\end{circusbox}
%
Due to the lack of support for {\OhCircus} in CZT the above {\OhCircus} methods cannot be type-checked.

\paragraph{Reference Type}

\comment{
\begin{schema}{CruiseControlState}
  engineActive : boolean\\
  topGear : boolean\\
  braking : boolean\\
  accelerating : boolean\\
  cruising : boolean\\
  throttle :ThrottleControllerClass\\
  throttleStarted : boolean\\
  speed : SpeedMonitorClass
\end{schema}
}

\begin{zed}
  CruiseControlClass ~ == ~ \circreftype CruiseControlState
\end{zed}
