\begin{zsection}
  \SECTION ~ AperiodicEventHandlerFW ~ \parents ~ HandlerId, HandlerChan, MissionChan
\end{zsection}
\extracircusvspace
%
\begin{circus}
  \circprocess AperiodicEventHandlerFW ~ \circdef ~ handler : HandlerId \circspot
  \also
  \circbegin
\end{circus}
%
\begin{schema}{AperiodicEventHandlerFWState}
  active : BOOL
\end{schema}
%
\begin{circusaction}
  \circstate ~ AperiodicEventHandlerFWState
\end{circusaction}
%
\begin{schema}{AperiodicEventHandlerFWInit}
  AperiodicEventHandlerFWState~'
\where
  active' = FALSE
\end{schema}
%
\begin{circusaction}
  StartHandler ~ \circdef ~ start\_handler~.~handler \then active := TRUE
\end{circusaction}
%
\begin{circusaction}
  ActivateHandlers ~ \circdef ~ activate\_handlers \then \Skip
\end{circusaction}
%
\begin{circusaction}
  DispatchHandler ~ \circdef ~ enter\_dispatch \then stop\_handler~.~handler \then leave\_dispatch \then \Skip
\end{circusaction}
%
\begin{circusaction}
  \circspot (\circmu X \circspot \lschexpract AperiodicEventHandlerFWInit \rschexpract \circseq\\
  \t1 ((StartHandler  \circseq ActivateHandlers) ~ \extchoice ~ ActivateHandlers) \circseq\\
  \t1 \circif ~ active = TRUE \circthen DispatchHandler\\
  \t1 \circelse ~ active = FALSE \circthen \Skip \circfi \circseq X) ~ \circinterrupt ~ end\_mission\_fw \then \Skip
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
