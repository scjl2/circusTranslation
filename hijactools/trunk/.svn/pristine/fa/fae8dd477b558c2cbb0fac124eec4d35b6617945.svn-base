\begin{zsection}
  \SECTION ~ SpeedMonitor ~ \parents ~ Preliminaries, GlobalConstants, Channels
\end{zsection}

\nid Below is given the process for the speed monitor component.
%
\begin{circusbox}
\begin{circus}
  \circprocess SpeedMonitor ~ \circdef
  \also

  \circbegin
\end{circus}

\begin{schema}{\circstateignore ~ State}
  rotations : \nat\\
  current\_speed : \nat
\end{schema}

\begin{schema}{Init}
  State~'
\where
  rotations' = 0 \land current\_speed' = 0
\end{schema}

\begin{comment}
\begin{circusaction}
  \circstate ~ State                                                                  
\end{circusaction}
\end{comment}

\begin{circusaction}
  BReq ~ \circdef ~ \circmu X \circspot ((wheel\_shaft \then rotations := rotations + 1) ~ ~ \extchoice\\
  \t1 (update\_speed ~ \then\\
  \t2 current\_speed := (rotations * cm\_per\_rotation * speed\_updates\_per\_hour) \div 100000 \circseq\\
  \t2 rotations := 0) ~~ \extchoice\\
  \t1 (get\_current\_speed~!~current\_speed \then \Skip)) \circseq X
\end{circusaction}

%\begin{circusaction}
%  BReq ~ \circdef ~ \circmu X \circspot ((wheel\_shaft \then rotations := rotations + 1) ~ ~ \extchoice\\
%  \t1 (update\_speed ~ \then\\
%  \t2 current\_speed := (rotations * cm\_per\_rotation * speed\_updates\_per\_hour) \div 100000 \circseq\\
%  \t2 rotations := 0) ~~ \extchoice\\
%  \t1 (\Intchoice tolerance : 0..speed\_tolerance \circspot\\
%  \t2 get\_current\_speed~!~(current\_speed + tolerance) \then \Skip ~~ \extchoice\\
%  \t2 get\_current\_speed~!~(current\_speed - tolerance) \then \Skip)) \circseq X
%\end{circusaction}

%\begin{circusaction}
%  BReqAlt ~ \circdef ~ \circval previous\_speed : \nat \circspot (\\
%  \t1 (wheel\_shaft \then rotations := rotations + 1) ~ ~ \extchoice\\
%  \t1 (update\_speed ~ \then previous\_speed := current\_speed \circseq\\
%  \t2 current\_speed := (rotations * cm\_per\_rotation * speed\_updates\_per\_hour) \div 100000 \circseq\\
%  \t2 rotations := 0) ~~ \extchoice\\
%  \t1 (get\_current\_speed~!~current\_speed \then \Skip) ~~ \extchoice\\
%  \t1 (get\_current\_speed~!~previous\_speed \then \Skip)) \circseq BReqAlt(previous\_speed)
%\end{circusaction}

\begin{circusaction}
  TReq ~ \circdef ~ \circmu X \circspot update\_speed \then \circwait update\_speed\_period \circseq X
\end{circusaction}

\begin{circusaction}
  \circspot \lschexpract Init \rschexpract \circseq ((BReq \lpar \{rotations, current\_speed\} | \lchanset update\_speed \rchanset | \emptyset \rpar TReq) \circhide \lchanset update\_speed \rchanset)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
\end{circusbox}

\nid The purpose of the $SpeedMonitor$ component is to infer, based on the rotations of the wheel shaft, the current speed of the vehicle. It, however, calculates it in an exact way and inaccuracies that are due to jitter of timer events are taken into consideration when computing the throttle voltage. To justify the isolation of the speed monitor into a separate component, and implied by it the introduction of the internal channel $get\_current\_speed$, we may say that we also find this separation in the specification of the cruise controller requirements in~\cite{HP87} where this case study has first been examined.

%\nid The purpose of the non-deterministic choice is to account for inaccuracies due to jitter that may affect the calculation of the current speed. We could try to model this jitter directly by assuming that $get\_current\_speed$ may yield a value that is slightly out-of-date, namely possibly missing the last (few) rotations of the wheel shaft. However, this would already be a quite concrete view of the system behaviour, maybe too concrete.

%After talking to Andy Wellings I was affirmed in the opinion that a requirements engineer would think in terms of tolerances rather than precise values. From a refinement point of view it is, however, still an open question which approach is more tractable. In any case, the advantage of the chosen approach is that we do not have to make a decision how many rotations we allow to be missed. Strictly, even if we eliminate the choice in favour of a precise value, there would still be inaccuracies with regards to the actual physical speed of the vehicle due to sampling. So the tolerance above is with respect to some ideal sampling mechanism rather than the actual (continuous) speed of the vehicle. We do not attempt to model the latter.
