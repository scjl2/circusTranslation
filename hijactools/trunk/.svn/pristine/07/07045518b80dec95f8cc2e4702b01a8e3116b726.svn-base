\begin{zsection}
  \SECTION ~ GlobalConstants ~ \parents ~ Preliminaries
\end{zsection}

\subsection{Speed Monitor}
%
Calculation of the current speed is realised by counting the rotations of the
wheel shaft. They are detected by occurrences of the $wheel\_shaft$
event. The constant $cm\_per\_rotation$ provides the distance travelled by
the car for one rotation of the shaft\footnote{In reality this will also
depend on the gear, but the model might not need to account for this
since we only consider cruising in top gear.}. It is specified in units of $cm$.
%
\begin{axdef}
  cm\_per\_rotation : \nat_1
\end{axdef}

\nid The constant $update\_speed\_period$ specifies the period with which the speed should be periodically re-calculated. It determines the accuracy with which the specification obtains information regarding the speed.
%
\begin{axdef}
  update\_speed\_period : \nat_1
\end{axdef}

\nid The constant $speed\_updates\_per\_hour$ is initialised to the number of periodic $update\_speed$ events being raised in one hour. We use it in calculating the current speed inside the $SpeedMonitor$ process.
%
\begin{zed}
  speed\_updates\_per\_hour == (3600 * 1000) \div update\_speed\_period
\end{zed}

\nid Finally, a tolerance is specified for the voltage outputs on the throttle.
%
\begin{axdef}
  voltage\_tolerance : \nat
\end{axdef}
%
We require the tolerance as a real implementation will always be able to precisely calculate the current speed and, based on it, the voltage to be written to the throttle as those calculations are triggered by periodic handlers that are subjects to jitters, and competing data access may also cause stale date being used in the calculations. Whether we should specify a tolerance for the computed speed independently is an open issue.

%\begin{axdef}
%  voltage\_tolerance : \nat
%\end{axdef}
