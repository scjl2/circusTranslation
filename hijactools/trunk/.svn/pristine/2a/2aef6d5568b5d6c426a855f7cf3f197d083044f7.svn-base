\begin{zsection}
  \SECTION ~ EngineApp ~ \parents ~ EngineClass, EngineMethChan, EngineConst, HandlerIds, Events
\end{zsection}

\begin{circus}
  \circprocess ~ EngineApp ~ \circdef ~ \circbegin
\end{circus}

\begin{schema}{EngineState}
  this : EngineClass
\end{schema}

\begin{circusaction}
  \circstate ~ EngineState
\end{circusaction}

\begin{circusaction}
  Init ~ \circdef ~ EngineInit~?~obj \then this := obj
\end{circusaction}

\begin{circusaction*}
  handleAsyncLongEventMeth ~ \circdef\\
  \t1 \circval param : BOOL \circspot this.handleAsyncLongEvent(evt)
\end{circusaction*}

\begin{comment}
\begin{circusaction}
  handleAsyncLongEventMeth ~ \circdef\\
  \t1 \circval param : BOOL \circspot \Skip
\end{circusaction}
\end{comment}

\begin{circusaction}
  Execute ~ \circdef ~ enter\_dispatch \then Dispatch
\end{circusaction}
\vspaceafterzpara

\green{The $Dispatch$ action has been modified to take into account the input parameter. We assume that the parameter is passed directly to the handler via an \code{AperiodicLongEvent} object.}
%
\begin{circusaction}
  Dispatch ~ \circdef ~ \circmu X \circspot  (leave\_dispatch \then \Skip) ~ ~ \extchoice\\
  \t1 (engine~?~param \then handleAsyncLongEventMeth(param) \circseq\\
  \t2 \circwait 0..EngineDeadline \circseq X)
\end{circusaction}

\begin{circusaction}
  Terminate ~ \circdef ~ done\_handler~.~EngineId \then \Skip
\end{circusaction}

\begin{circusaction}
  \circspot (\circmu X \circspot Init \circseq Execute \circseq Terminate \circseq X) \circinterrupt ~ end\_mission\_fw \then \Skip
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
