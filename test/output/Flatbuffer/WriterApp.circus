\begin{zsection}
  \SECTION ~ WriterApp ~ \parents ~ ManagedThreadChan, SchedulableId, SchedulableIds
\end{zsection}
%
\begin{circus}
\circprocess WriterApp \circdef \circbegin
\end{circus}

\begin{schema}{State}
  fbMission : FlatBufferMission\\ 
  i : int\\ 
\end{schema}
% 
\begin{circusaction}
\circstate State
\end{circusaction}
%
\begin{schema}{Init}
  State~'
\where
  fbMission' = fbMission\\ 
  i' = 1\\ 
\end{schema}

\begin{circusaction}
Run \circdef \\
\circblockopen
	runCall~.~Writer \then \\
		
	runRet~.~Writer \then \\
	\Skip
\circblockclose
\end{circusaction}	

\begin{circusaction}
Methods \circdef \\
\circblockopen
	Run \\
%
\extchoice \\
	runMeth \\ 
%
%
\circblockclose 
	 \circseq Methods
\end{circusaction}

\begin{circusaction}
runMeth \circdef 
\circvar ret : null \circspot
\\
\circblockopen
runCall~.~Writer 
\then \\
  \circblockopen


\circblockopen \circmu X \circspot \\ \circblockopen \circif ~ (\lnot fbMission.terminationPendingCall\then \\fbMission.terminationPendingRet) ~ \circthen ~ \\ \t1 \circblockopen \circblockopen \circblockopen \circblockopen \circmu X \circspot \\ \circblockopen \circif ~ (\lnot fbMission.bufferEmptyCall\then \\fbMission.bufferEmptyRet) ~ \circthen ~ \\ \t1 \circblockopen \circblockopen fbMission.waitOnMissionCall\then \\fbMission.waitOnMissionRet \circblockclose \circblockclose \circseq X \\ \circelse ~ ~ \lnot (\lnot fbMission.bufferEmptyCall\then \\fbMission.bufferEmptyRet) \circthen \Skip \\ \circfi \circblockclose \circblockclose \circseq \\ fbMission.writeCall\then \\fbMission.writeRet \circseq \\ i := i + 1 \circblockclose \circblockclose \circblockclose \circseq X \\ \circelse ~ ~ \lnot (\lnot fbMission.terminationPendingCall\then \\fbMission.terminationPendingRet) \circthen \Skip \\ \circfi \circblockclose \circblockclose
  \circblockclose
 \circseq  \\

runRet~.~Writer~!~ret \then \\
\Skip
\circblockclose
\end{circusaction}	
%
%

\begin{circusaction}
\circspot (Methods) \circinterrupt (end\_managedThread\_app~.~Writer \then \Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
