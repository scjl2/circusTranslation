
\begin{circus}
  \circprocess ~ ACCMissionApp ~ \circdef ~ \circbegin
\end{circus}
%
\begin{circusaction}
  \circstate State ~ == ~ [this : \circreftype ACCMissionClass]
\end{circusaction}
%
\begin{circusaction}
  Init ~ == ~ [State~' | this' = \circnew ACCMissionClass]
\end{circusaction}
%
\begin{circusaction}
  initializeMeth ~ \circdef ~ \\
  \t1 initializeCall~.~ACCMId ~ \circthen ~ \\
  \t1
  \circblockopen
  \circblockopen createEvents() \circseq \\ createISRs() \circseq \\ registerISRs() \circseq \\ \circvar shaft : WheelShaftClass \circspot shaft := \circnew WheelShaftClass ~ \circseq \\ \circvar speedo : SpeedMonitorClass \circspot speedo := \circnew SpeedMonitorClass(shaft, 500) ~ \circseq \\ \circvar throttle : ThrottleControllerClass \circspot throttle := \circnew ThrottleControllerClass(speedo) ~ \circseq \\ \circvar cruise : ControllerClass \circspot cruise := \circnew ControllerClass(throttle, speedo) ~ \circseq \\ \circvar engine : EngineClass \circspot engine := \circnew EngineClass(cruise) ~ \circseq \\ \circvar brake : BrakeClass \circspot brake := \circnew BrakeClass(cruise) ~ \circseq \\ \circvar gear : GearClass \circspot gear := \circnew GearClass(cruise) ~ \circseq \\ \circvar lever : LeverClass \circspot lever := \circnew LeverClass(cruise) ~ \circseq \\ shaft.register() \circseq \\ engine.register() \circseq \\ brake.register() \circseq \\ gear.register() \circseq \\ lever.register() \circseq \\ speedo.register() \circseq \\ throttle.register() \circblockclose \circseq
  \\
  initializeRet~.~ACCMId ~ \circthen ~ \Skip
  \circblockclose
\end{circusaction}
%
\begin{circusaction}
  cleanupMeth ~ \circdef ~ \\
  \t1 cleanupCall~.~ACCMId ~ \circthen ~ \\
  \t1
  \circblockopen
  this~.~cleanup() \circseq
  \\
  cleanupRet~.~ACCMId ~ \circthen ~ \Skip
  \circblockclose
\end{circusaction}
%
\begin{circusaction}
  Methods ~ \circdef ~ \\
  \t1
  \circmu X \circspot
  \circblockopen
  initializeMeth ~ \extchoice ~ \\
  cleanupMeth
  \circblockclose
  \circseq X
\end{circusaction}
%
\begin{circusaction}
  \circspot (\circmu X \circspot Init \circseq (Methods \circinterrupt end\_mission\_app~.~ACCMId \then X)) \circinterrupt end\_mission\_fw \then \Skip
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
