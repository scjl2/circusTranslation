
\begin{circus}
  \circprocess ~ WheelShaftApp ~ \circdef ~ \circbegin
\end{circus}
%
\begin{circusaction}
  \circstate State ~ == ~ [this : \circreftype WheelShaftClass]
\end{circusaction}
%
\begin{circusaction}
  Init ~ == ~ WheelShaftInit~?~obj \then this := obj
\end{circusaction}
%
\begin{circusaction}
  Methods ~ \circdef ~ \Stop
\end{circusaction}
%
\begin{circusaction}
  handleAsyncEvent ~ \circdef ~ 
  \\
  \t1
\circblockopen count := count + 1 \circblockclose\end{circusaction}
%
\begin{circusaction}
  Execute ~ \circdef ~ enter\_dispatch~.~WheelshaftHId \then Dispatch
\end{circusaction}
%
\begin{circusaction}
  Dispatch ~ \circdef ~ \\
  \t1
  \circblockopen
    \circmu X \circspot
    \circblockopen
      \circblockopen
        \circblockopen
          Methods ~ ~ \extchoice ~
          \\
          (wheelshaft \then handleAsyncEvent)
        \circblockclose
        \circseq X
      \circblockclose
      \\
      \extchoice
      \\
      leave\_dispatch~.~WheelshaftHId \then \Skip
    \circblockclose
  \circblockclose
\end{circusaction}
%
\begin{circusaction}
  \circspot (\circmu X \circspot Init \circseq Execute \circseq X) \circinterrupt end\_mission\_fw \then \Skip
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
