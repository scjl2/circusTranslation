\begin{zsection}
  \SECTION ~ MainMissionSequencerApp ~ \parents ~ scj\_toolkit, scj\_library, MissionIds
\end{zsection}

\begin{circus}
  \circprocess ~ MainMissionSequencerApp ~ \circdef ~ \circbegin
\end{circus}

\begin{schema}{MainMissionSequencerState}
  mission\_done : BOOL
\end{schema}

\begin{circusaction}
  \circstate ~ MainMissionSequencerState
\end{circusaction}

\begin{circusaction}
  Init ~ \circdef ~ mission\_done := FALSE
\end{circusaction}

\begin{circusaction}
  getNextMissionMeth ~ \circdef\ ~ getNextMissionCall \then\\
  \t1 \circif ~ \lnot mission\_done = TRUE \circthen\\
  \t2 (mission\_done := TRUE \circseq\\
  \t2 getNextMissionRet~!~MainMissionId \then Skip)\\
  \t1 \circelse ~ \lnot (\lnot mission\_done = TRUE) \circthen getNextMissionRet~!~nullMId \then Skip\\
  \t1 \circfi
\end{circusaction}

\begin{circusaction}
  Methods ~ \circdef ~ \circmu X \circspot getNextMissionMeth \circseq X
\end{circusaction}

\begin{circusaction}
  \circspot Init \circseq (Methods ~ \circinterrupt ~ end\_sequencer\_app \then Skip)
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
