\begin{zsection}
  \SECTION ~ MainMissionApp ~ \parents ~ MissionIds, HandlerIds, DataObjects,\\
  \t1 WheelShaft, Engine, Brake, Gear, Lever, SpeedMonitor, ThrottleController
\end{zsection}

\begin{circus}
  \circprocess ~ MainMissionApp ~ \circdef ~ \circbegin
\end{circus}
%
\begin{circusaction}
  Init ~ \circdef ~ \Skip
\end{circusaction}
%
\begin{circusaction*}
  initializeMeth ~ \circdef ~ initializeCall~.~MainMissionId ~ \then\\
  \t1
  \circblockopen
  \circvar shaft : WheelShaftClass;\\
  \t1 speedo : SpeedMonitorClass;\\
  \t1 throttle : ThrottleControllerClass;\\
  \t1 cruise : CruiseControlClass;\\
  \t1 engine : EngineClass;\\
  \t1 brake : BrakeClass;\\
  \t1 gear : GearClass;\\
  \t1 lever : LeverClass \circspot\\
  shaft := \circnew WheelShaftClass \circseq\\
  WheelShaftInit~!~shaft \then \Skip \circseq\\
  register~.~WheelShaftId \then \Skip \circseq\\
  speedo := \circnew SpeedMonitorClass(shaft) \circseq\\
  SpeedMonitorInit~!~speedo \then \Skip \circseq\\
  register~.~SpeedMonitorId \then \Skip \circseq\\
  throttle := \circnew ThrottleControllerClass(shaft, speedo) \circseq\\
  ThrottleControllerInit~!~throttle \then \Skip \circseq\\
  register~.~ThrottleControllerId \then \Skip \circseq\\
  cruise := \circnew CruiseControlClass(throttle, speedo) \circseq\\
  engine := \circnew EngineClass(cruise) \circseq\\
  EngineInit~!~engine \then \Skip \circseq\\
  register~.~EngineId \then \Skip \circseq\\
  brake := \circnew BrakeClass(cruise) \circseq\\
  BrakeInit~!~brake \then \Skip \circseq\\
  register~.~BrakeId \then \Skip \circseq\\
  gear := \circnew GearClass(cruise) \circseq\\
  GearInit~!~gear \then \Skip \circseq\\
  register~.~GearId \then \Skip \circseq\\
  lever := \circnew LeverClass(cruise) \circseq\\
  LeverInit~!~lever \then \Skip \circseq\\
  register~.~LeverId \then \Skip
  \circblockclose
  \circseq\\
  \t1 initializeRet~.~MainMissionId \then \Skip
\end{circusaction*}
%
\begin{comment}
\begin{circusaction}
  initializeMeth ~ \circdef ~ \Skip
\end{circusaction}
\end{comment}
%
\begin{circusaction}
  cleanupMeth ~ \circdef\\
  \t1 cleanupCall~.~MainMissionId \then \Skip \circseq\\
  \t1 cleanupRet~.~MainMissionId \then \Skip
\end{circusaction}
%
\begin{circusaction}
  missionMemorySizeMeth ~ \circdef\\
  \t1 missionMemorySizeCall~.~MainMissionId \then \Skip \circseq\\
  \t1 missionMemorySizeRet~.~MainMissionId~!~131072 \then \Skip
\end{circusaction}
%
\begin{circusaction}
  Methods ~ \circdef ~ \circmu X \circspot (initializeMeth ~ \extchoice ~ cleanupMeth ~ \extchoice ~ missionMemorySizeMeth) \circseq X
\end{circusaction}
%
\begin{circusaction}
  \circspot Init \circseq (Methods ~ \circinterrupt ~ end\_mission\_app~.~MainMissionId \then \Skip)
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
