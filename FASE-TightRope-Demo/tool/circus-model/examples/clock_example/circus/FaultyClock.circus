\begin{zsection}
  \SECTION ~ FaultyClock ~ \parents ~ scj\_toolkit, scj\_library,\\
  \t1 ClockMethChan, ClockConst, HighResolutionTime, AbsoluteTime, MissionFWChan
\end{zsection}

\begin{circus}
  \circprocess ~ FaultyClock ~ \circdef ~ \circbegin
\end{circus}

\begin{schema}{FaultyClockState}
  time : HighResolutionTimeClass
\end{schema}

\begin{circusaction}
  \circstate FaultyClockState
\end{circusaction}

\begin{schema}{FaultyClockInit}
  FaultyClockState~'
\where
  time' = \circnew AbsoluteTimeClass
\end{schema}

\begin{circus*}
  Tick ~ \circdef ~ \circmu X \circspot \circwait Clock\_resolution \circseq time := time.add(Clock\_resolution)
\end{circus*}

\begin{circusaction}
  Tick ~ \circdef ~ Skip
\end{circusaction}

\begin{circusaction}
  getTimeMeth ~ \circdef ~ getTimeCall \then getTimeRet~!~time \then Skip 
\end{circusaction}

\begin{circusaction}
  getResolutionMeth ~ \circdef ~ getResolutionCall \then getResolutionRet~!~Clock\_resolution \then Skip 
\end{circusaction}

\begin{circusaction}
  Methods ~ \circdef ~ \circmu X \circspot (getTimeMeth \extchoice getResolutionMeth) \circseq X
\end{circusaction}
\vspaceafterzpara

\red{Since $Tick$ never terminates, the state update of $Tick$ is never visible to $Methods$.}
%
\begin{circusaction}
  \circspot (\lschexpract FaultyClockInit \rschexpract \circseq (Methods \lpar \emptyset | \emptyset |  \{time\} \rpar Tick)) \circinterrupt end\_mission\_fw \then Skip
\end{circusaction}

\begin{circus}
  \circend
\end{circus}
