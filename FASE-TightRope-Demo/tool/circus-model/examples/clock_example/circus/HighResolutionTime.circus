\begin{zsection}
  \SECTION ~ HighResolutionTime ~ \parents ~ scj\_library
\end{zsection}

\begin{ohcircus}
  \circclass ~ HighResolutionTimeClass ~ \circdef ~ \circbegin
\end{ohcircus}

\begin{schema}{\circstateignore HighResolutionTime\_State}
  \circprivate milliseconds : long\\
  \circprivate nanoseconds : int
\end{schema}
\vspaceafterzpara

\red{For now we identify the {\OhCircus} class object with the state of the schema.}
%
\begin{zed}
  HighResolutionTimeClass ~ == ~ HighResolutionTime\_State
\end{zed}

\begin{schema}{\circinitial HighResolutionTime\_Init}
  HighResolutionTime\_State~'
\where
  milliseconds' = 0 \land nanoseconds' = 0
\end{schema}
\vspaceafterzpara

\red{Unfortunately, the method names need to be prefixed to avoid name clashes.}
%
\begin{schema}{\circpublic HighResolutionTime\_getMilliseconds}
  \Xi HighResolutionTime\_State\\
  result! : long
\where
  result! = milliseconds
\end{schema}

\begin{schema}{\circpublic HighResolutionTime\_getNanoseconds}
  \Xi HighResolutionTime\_State\\
  result! : int
\where
  result! = nanoseconds
\end{schema}

\begin{schema}{\circpublic HighResolutionTime\_set}
  \Delta HighResolutionTime\_State\\
  time? : HighResolutionTimeClass
\where
  milliseconds = time?.milliseconds\\
  nanoseconds = time?.nanoseconds
\end{schema}
\vspaceafterzpara

\red{A problem: we do not have polymorphism when defining axiomatic constants in Z.}
%
\begin{schema}{\circpublic HighResolutionTime\_setMillis}
  \Delta HighResolutionTime\_State\\
  millis? : long
\where
  milliseconds = millis?\\
  nanoseconds = 0
\end{schema}

\begin{schema}{\circpublic HighResolutionTime\_setMillisNanos}
  \Delta HighResolutionTime\_State\\
  millis? : long\\
  nanos? : int
\where
  milliseconds = millis?\\
  nanoseconds = nanos?
\end{schema}

\begin{ohcircus}
  \circend
\end{ohcircus}
